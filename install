#!/bin/bash

set -e

DRY_RUN=false
VERBOSE=false

usage() {
    echo "Usage: $0 [-n] [-v]" >&2
    echo "  -n  dry run, show actions without executing" >&2
    echo "  -v  verbose output" >&2
}

while getopts ":nv" opt; do
    case "$opt" in
        n) DRY_RUN=true ;;
        v) VERBOSE=true ;;
        *) usage; exit 1 ;;
    esac
done
shift $((OPTIND-1))

OS=$(uname)
DOTFILES=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

log() {
    [ "$VERBOSE" = true ] && echo "$@"
}

link_file() {
    local src="$1" dest="$2"

    if [ ! -e "$src" ]; then
        echo "Error: source '$src' does not exist" >&2
        exit 1
    fi

    log "ln -sf $src $dest"
    if [ "$DRY_RUN" = false ]; then
        ln -sf "$src" "$dest" || { echo "Failed to link $src -> $dest" >&2; exit 1; }
    fi
}

# common directories
mkdir -p "$HOME/.local/bin" "$HOME/.config" "$HOME/Library/Application Support" 2>/dev/null || true

link_file "$DOTFILES/.zshrc" "$HOME/.zshrc"
link_file "$DOTFILES/scripts/copyright" "$HOME/.local/bin/copyright"
link_file "$DOTFILES/tmux/tmux.conf" "$HOME/.tmux.conf"
link_file "$DOTFILES/scripts/t" "$HOME/.local/bin/t"
link_file "$DOTFILES/nvim" "$HOME/.config/nvim"
link_file "$DOTFILES/warp" "$HOME/.warp"

# set up nvim config from local repo
link_file "${HOME}/bin/nvim" "${HOME}/.config/nvim"

if [[ "$OS" == "Darwin" ]]; then
    link_file "${HOME}/bin/ghostty" "${HOME}/Library/Application Support/com.mitchellh.ghostty"
    link_file "${HOME}/bin/yabai" "${HOME}/.config/yabai"
    link_file "${HOME}/bin/skhd" "${HOME}/.config/skhd"
fi

link_file "${HOME}/bin/.gitignore" "${HOME}/.gitignore"
git config --global core.excludesfile "$HOME/.gitignore"

link_file "${HOME}/bin/aerospace.toml" "${HOME}/.aerospace.toml"
